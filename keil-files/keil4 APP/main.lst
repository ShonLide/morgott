C51 COMPILER V9.60.7.0   MAIN                                                              11/03/2023 01:08:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DEBUG OBJEC
                    -TEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /*******************************************************
   2          **  CPU: STC11L08XE
   3          **  晶振：22.1184MHZ
   4          **  波特率：9600 bit/S
   5          **  口令模式： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
   6          /*********************************************************/
   7          
   8          
   9          #include "config.h"
  10          /************************************************************************************/
  11          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  12          //  LD_ASR_NONE:    表示没有在作ASR识别
  13          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  14          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  15          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  16          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  17          /***********************************************************************************/
  18          uint8 idata nAsrStatus = 0;
  19          void MCU_init();
  20          void ProcessInt0(); //识别处理函数
  21          void delay(unsigned long uldata);
  22          void User_handle(uint8 dat);//用户执行操作函数
  23          void Delay200ms();
  24          void Led_test(void);//单片机工作指示
  25          uint8_t G0_flag = DISABLE; //运行标志，ENABLE:运行。DISABLE:禁止运行
  26          sbit LED = P4 ^ 2; //信号指示灯
  27          
  28          sbit SRD1 = P1 ^ 7;
  29          sbit SRD2 = P1 ^ 6;
  30          sbit SRD3 = P1 ^ 5;
  31          sbit SRD4 = P1 ^ 4;
  32          
  33          
  34          /***********************************************************
  35          * 名    称： void  main(void)
  36          * 功    能： 主函数 程序入口
  37          * 入口参数：
  38          * 出口参数：
  39          * 说    明：
  40          * 调用方法：
  41          **********************************************************/
  42          void  main(void)
  43          {
  44   1        uint8 idata nAsrRes;
  45   1        uint8 i = 0;
  46   1        P1M0 = 0xFF;
  47   1        P1M1 = 0x00;
  48   1        SRD1 = SRD2 = SRD3 = SRD4 = 0;
  49   1        Led_test();
  50   1        MCU_init();
  51   1        LD_Reset();
  52   1        UartIni(); /*串口初始化*/
  53   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  54   1        PrintCom("<G>欢迎使用");
C51 COMPILER V9.60.7.0   MAIN                                                              11/03/2023 01:08:04 PAGE 2   

  55   1        while(1)
  56   1        {
  57   2          switch(nAsrStatus)
  58   2          {
  59   3          case LD_ASR_RUNING:
  60   3          case LD_ASR_ERROR:
  61   3            break;
  62   3          case LD_ASR_NONE:
  63   3          {
  64   4            nAsrStatus = LD_ASR_RUNING;
  65   4            if (RunASR() == 0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  66   4            {
  67   5              nAsrStatus = LD_ASR_ERROR;
  68   5            }
  69   4            break;
  70   4          }
  71   3          case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  72   3          {
  73   4            nAsrRes = LD_GetResult();   /*获取结果*/
  74   4            User_handle(nAsrRes);//用户执行函数
  75   4            nAsrStatus = LD_ASR_NONE;
  76   4            break;
  77   4          }
  78   3          case LD_ASR_FOUNDZERO:
  79   3          default:
  80   3          {
  81   4            nAsrStatus = LD_ASR_NONE;
  82   4            break;
  83   4          }
  84   3          }// switch
  85   2        }// while
  86   1      
  87   1      }
  88          /***********************************************************
  89          * 名    称：   LED灯测试
  90          * 功    能： 单片机是否工作指示
  91          * 入口参数： 无
  92          * 出口参数：无
  93          * 说    明：
  94          **********************************************************/
  95          void Led_test(void)
  96          {
  97   1        LED = ~ LED;
  98   1        Delay200ms();
  99   1        LED = ~ LED;
 100   1        Delay200ms();
 101   1        LED = ~ LED;
 102   1        Delay200ms();
 103   1        LED = ~ LED;
 104   1        Delay200ms();
 105   1        LED = ~ LED;
 106   1        Delay200ms();
 107   1        LED = ~ LED;
 108   1      }
 109          /***********************************************************
 110          * 名    称： void MCU_init()
 111          * 功    能： 单片机初始化
 112          * 入口参数：
 113          * 出口参数：
 114          * 说    明：
 115          * 调用方法：
 116          **********************************************************/
C51 COMPILER V9.60.7.0   MAIN                                                              11/03/2023 01:08:04 PAGE 3   

 117          void MCU_init()
 118          {
 119   1        P0 = 0xff;
 120   1        P1 = 0x00;
 121   1        P2 = 0xff;
 122   1        P3 = 0xff;
 123   1        P4 = 0xff;
 124   1      
 125   1      
 126   1        AUXR &= 0x7F;   //定时器时钟12T模式
 127   1        TMOD |= 0x01;   //设置定时器模式
 128   1        TL0 = 0x00;   //设置定时初值
 129   1        TH0 = 0x28;   //设置定时初值
 130   1        TF0 = 0;    //清除TF0标志
 131   1        TR0 = 1;    //定时器0开始计时
 132   1        ET0 = 1;
 133   1      
 134   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 135   1        IE0 = 1;
 136   1        EX0 = 1;
 137   1        EA = 1;
 138   1        WDT_CONTR = 0x3D;
 139   1      }
 140          /***********************************************************
 141          * 名    称：  延时函数
 142          * 功    能：
 143          * 入口参数：
 144          * 出口参数：
 145          * 说    明：
 146          * 调用方法：
 147          **********************************************************/
 148          void Delay200us()   //@22.1184MHz
 149          {
 150   1        unsigned char i, j;
 151   1        _nop_();
 152   1        _nop_();
 153   1        i = 5;
 154   1        j = 73;
 155   1        do
 156   1        {
 157   2          while (--j);
 158   2        }
 159   1        while (--i);
 160   1      }
 161          
 162          void  delay(unsigned long uldata)
 163          {
 164   1        unsigned int j  =  0;
 165   1        unsigned int g  =  0;
 166   1        while(uldata--)
 167   1          Delay200us();
 168   1      }
 169          
 170          void Delay200ms()   //@22.1184MHz
 171          {
 172   1        unsigned char i, j, k;
 173   1      
 174   1        i = 17;
 175   1        j = 208;
 176   1        k = 27;
 177   1        do
 178   1        {
C51 COMPILER V9.60.7.0   MAIN                                                              11/03/2023 01:08:04 PAGE 4   

 179   2          do
 180   2          {
 181   3            while (--k);
 182   3          }
 183   2          while (--j);
 184   2        }
 185   1        while (--i);
 186   1      }
 187          
 188          /***********************************************************
 189          * 名    称： 中断处理函数
 190          * 功    能：
 191          * 入口参数：
 192          * 出口参数：
 193          * 说    明：
 194          * 调用方法：
 195          **********************************************************/
 196          void ExtInt0Handler(void) interrupt 0
 197          {
 198   1        ProcessInt0();
 199   1      }
 200          /***********************************************************
 201          * 名    称：用户执行函数
 202          * 功    能：识别成功后，执行动作可在此进行修改
 203          * 入口参数： 无
 204          * 出口参数：无
 205          * 说    明：
 206          **********************************************************/
 207          void  User_handle(uint8 dat)
 208          {
 209   1        if(0 == dat)
 210   1        {
 211   2          G0_flag = ENABLE;  
 212   2          PrintCom("1");
 213   2          LED = 0;
 214   2        }
 215   1        else if(ENABLE == G0_flag)
 216   1        {
 217   2          G0_flag = DISABLE;
 218   2          LED = 1;
 219   2          switch(dat)
 220   2          {
 221   3          case CODE_1:   
 222   3            //SRD1 = 1;
 223   3            PrintCom("3");
 224   3            break;
 225   3          case CODE_2:   
 226   3            //SRD1 = 0;
 227   3            PrintCom("4");
 228   3            break;
 229   3          case CODE_3:    
 230   3            //SRD2 = 1;
 231   3            PrintCom("5");
 232   3            break;
 233   3          case CODE_4:    
 234   3            //SRD2 = 0;
 235   3            PrintCom("6");
 236   3            break;
 237   3          case CODE_5:    /*命令“打开冰箱”*/
 238   3            //SRD3 = 1;
 239   3            PrintCom("7");
 240   3            break;
C51 COMPILER V9.60.7.0   MAIN                                                              11/03/2023 01:08:04 PAGE 5   

 241   3          default:/*text.....*/
 242   3            break;
 243   3          }
 244   2        }
 245   1        else
 246   1        {
 247   2          //PrintCom("请说出一级口令\r\n"); /*text.....*/
 248   2        }
 249   1      }
 250          
 251          void tm0_isr() interrupt 1
 252          {
 253   1          TL0 = 0x00;   //设置定时初值
 254   1        TH0 = 0x28;   //设置定时初值
 255   1        WDT_CONTR=0x3D;
 256   1          
 257   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
